
package mnu.service.impl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EmployeeWebServiceImpl", targetNamespace = "http://impl.service.mnu/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EmployeeWebServiceImpl {


    /**
     * 
     * @param birthday
     * @param gender
     * @param surname
     * @param name
     * @param id
     * @param salary
     * @return
     *     returns boolean
     * @throws InvalidIdException
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.UpdateResponse")
    public boolean update(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname,
        @WebParam(name = "gender", targetNamespace = "")
        String gender,
        @WebParam(name = "birthday", targetNamespace = "")
        String birthday,
        @WebParam(name = "salary", targetNamespace = "")
        int salary)
        throws InvalidIdException, InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     * @throws InvalidIdException
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.DeleteResponse")
    public boolean delete(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws InvalidIdException, InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param birthday
     * @param gender
     * @param surname
     * @param name
     * @param salary
     * @return
     *     returns int
     * @throws InvalidIdException
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.CreateResponse")
    public int create(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname,
        @WebParam(name = "gender", targetNamespace = "")
        String gender,
        @WebParam(name = "birthday", targetNamespace = "")
        String birthday,
        @WebParam(name = "salary", targetNamespace = "")
        int salary)
        throws InvalidIdException, InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param gender
     * @param name
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByNameAndGender", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByNameAndGender")
    @ResponseWrapper(localName = "findByNameAndGenderResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByNameAndGenderResponse")
    public List<Employee> findByNameAndGender(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "gender", targetNamespace = "")
        String gender)
        throws InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param gender
     * @param salary
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws InvalidIdException
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByGenderAndSalary", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByGenderAndSalary")
    @ResponseWrapper(localName = "findByGenderAndSalaryResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByGenderAndSalaryResponse")
    public List<Employee> findByGenderAndSalary(
        @WebParam(name = "gender", targetNamespace = "")
        String gender,
        @WebParam(name = "salary", targetNamespace = "")
        int salary)
        throws InvalidIdException, InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param birthday
     * @param gender
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByGenderAndBirthday", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByGenderAndBirthday")
    @ResponseWrapper(localName = "findByGenderAndBirthdayResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByGenderAndBirthdayResponse")
    public List<Employee> findByGenderAndBirthday(
        @WebParam(name = "gender", targetNamespace = "")
        String gender,
        @WebParam(name = "birthday", targetNamespace = "")
        String birthday)
        throws InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param surname
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findBySurname", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindBySurname")
    @ResponseWrapper(localName = "findBySurnameResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindBySurnameResponse")
    public List<Employee> findBySurname(
        @WebParam(name = "surname", targetNamespace = "")
        String surname)
        throws InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param name
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByName", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByName")
    @ResponseWrapper(localName = "findByNameResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByNameResponse")
    public List<Employee> findByName(
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param id
     * @return
     *     returns mnu.service.impl.Employee
     * @throws InvalidIdException
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findById", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByIdResponse")
    public Employee findById(
        @WebParam(name = "id", targetNamespace = "")
        int id)
        throws InvalidIdException, InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param surname
     * @param name
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByFullName", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByFullName")
    @ResponseWrapper(localName = "findByFullNameResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByFullNameResponse")
    public List<Employee> findByFullName(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname)
        throws InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param birthday
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByBirthday", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByBirthday")
    @ResponseWrapper(localName = "findByBirthdayResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByBirthdayResponse")
    public List<Employee> findByBirthday(
        @WebParam(name = "birthday", targetNamespace = "")
        String birthday)
        throws InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param salary
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws InvalidIdException
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findBySalary", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindBySalary")
    @ResponseWrapper(localName = "findBySalaryResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindBySalaryResponse")
    public List<Employee> findBySalary(
        @WebParam(name = "salary", targetNamespace = "")
        int salary)
        throws InvalidIdException, InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindAllResponse")
    public List<Employee> findAll()
        throws MySQLException
    ;

    /**
     * 
     * @param gender
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByGender", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByGender")
    @ResponseWrapper(localName = "findByGenderResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByGenderResponse")
    public List<Employee> findByGender(
        @WebParam(name = "gender", targetNamespace = "")
        String gender)
        throws InvalidParameterException, MySQLException
    ;

    /**
     * 
     * @param birthday
     * @param gender
     * @param surname
     * @param name
     * @return
     *     returns java.util.List<mnu.service.impl.Employee>
     * @throws MySQLException
     * @throws InvalidParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByFullInfo", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByFullInfo")
    @ResponseWrapper(localName = "findByFullInfoResponse", targetNamespace = "http://impl.service.mnu/", className = "mnu.service.impl.FindByFullInfoResponse")
    public List<Employee> findByFullInfo(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "surname", targetNamespace = "")
        String surname,
        @WebParam(name = "gender", targetNamespace = "")
        String gender,
        @WebParam(name = "birthday", targetNamespace = "")
        String birthday)
        throws InvalidParameterException, MySQLException
    ;

}
